{"version":3,"sources":["styles/GlobalStyle.js","components/Item.js","components/Collection.js","utils/ImmutableXConnection.js","utils/getProtoCollection.js","components/Chart.js","components/Popup.js","pages/Home.js","utils/context.js","components/OwnedCard.js","components/OwnedCollection.js","components/OwnedPopup.js","pages/Account.js","assets/logo.png","components/Header.js","pages/Discounts.js","index.js"],"names":["ImageWrapper","styled","div","BuyButton","button","SellButton","DefaultButton","SpinnerWrapper","Item","card","showPopup","setPopup","setPopupCard","popupCard","className","src","id","alt","onClick","Collection","loadCollection","useState","allCards","setAllCards","cards","setCards","isLoading","setLoading","a","assets","console","log","useEffect","initPage","type","placeholder","onChange","e","filteredResult","filter","name","toLowerCase","includes","target","value","Spinner","animation","map","apiAddress","COLLECTION_ADDRESS","link","Link","WALLET_ADDRESS","STARK_PUBLIC_KEY","setupAndLogin","setup","address","starkPublicKey","localStorage","setItem","getAllUserAssets","ImmutableXClient","build","publicApiUrl","client","getItem","getAssets","user","status","collection","sell_orders","assetRequest","concat","result","assetCursor","cursor","asset","isListed","orders","length","sellAsset","priceInEth","sellParams","amount","tokenId","tokenAddress","token_address","sell","getCheapestSellOrders","pageSize","ordersCursor","metadata","getOrders","page_size","sell_token_address","sell_metadata","order_by","direction","ordersRequest","getOrdersHistory","min_date","Date","setMonth","getMonth","ordersCursors","min_timestamp","toISOString","getPriceHistory","h_prices","Map","forEach","order","unixtime","parse","updated_timestamp","f_time","toLocaleDateString","day","month","has","res","get","price","toEthPrice","buy","data","quantity","volume","toFixed","set","key","dict","time","fillOrder","orderId","Math","pow","fetchProtoCollection","Axios","response","records","fetchDiscounts","getEthPrice","params","USD","fetchBestPrice","quality","bestOrder","minPrice","Number","MAX_SAFE_INTEGER","orderID","json","JSON","stringify","decimals","currentPrice","currentID","order_id","image_url","properties","Chart","proto","history","setHistory","Init","ethprice","hprices","elem","ComposedChart","width","height","margin","top","right","bottom","left","CartesianGrid","stroke","XAxis","dataKey","YAxis","yAxisId","Label","angle","position","style","textAnchor","orientation","domain","dataMax","Tooltip","Legend","Line","Bar","barSize","fill","Popup","setPrice","setOrderID","image","setImage","setQuality","error","setError","ethPrice","setEthPrice","setOrders","Pcontainer","init","slice","aPrice","handleBuy","Modal","show","onHide","dialogClassName","Header","closeButton","Title","Body","order_ethprice","order_usdprice","Footer","Button","variant","Home","LoggedContext","createContext","LoggedProvider","children","logged","setLogged","Provider","OwnedCard","OwnedCollection","CardWrapper","OwnedPopup","sellPrice","setSellPrice","myOrders","fetchCheapestSellOrders","handleSell","placeHolder","Account","useContext","setAddress","logAccount","NavContainer","nav","StyledLink","useHistory","alert","Logo","removeItem","push","to","Discounts","ReactDOM","render","StrictMode","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.a455a2e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\"\r\n\r\nexport const ImageWrapper = styled.div`\r\ntransition: all .2s ease-in-out;\r\nborder-radius: 10px;\r\n&:hover{\r\n    transform:scale(1.1);\r\n}\r\n`\r\n\r\nexport const BuyButton = styled.button`\r\n  background-color: green;\r\n  width: 90px;\r\n  height: 30px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  color: white;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const SellButton = styled.button`\r\n  background-color: red;\r\n  width: 90px;\r\n  height: 30px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  color: white;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 12px;\r\n  margin-left:10px;\r\n`;\r\n\r\nexport const DefaultButton = styled.button`\r\nbackground-color: grey;\r\n  width: 90px;\r\n  height: 30px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  color: white;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 12px;\r\n  margin-left:10px;\r\n`\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  margin-top:10%;\r\n  display:flex;\r\n  justify-content : center;\r\n`","import { ImageWrapper } from '../styles/GlobalStyle'\r\n\r\n\r\nfunction Item({ card, showPopup, setPopup, popupCard, setPopupCard }) {\r\n\r\n\r\n    const handleClick = () => {\r\n        setPopup(!showPopup)\r\n        setPopupCard(card)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <li key={card.id}>\r\n                <ImageWrapper>\r\n                    <img className='nft-item-cover' src={`https://card.godsunchained.com/?id=${card.id}&q=4`} alt={`${card.id} cover`} onClick={handleClick} />\r\n                </ImageWrapper>\r\n            </li>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item","import { useState, useEffect } from 'react'\r\nimport Item from './Item'\r\nimport '../styles/Collection.css'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Collection({ showPopup, setPopup, popupCard, setPopupCard, loadCollection }) {\r\n    const [allCards, setAllCards] = useState([])\r\n    const [cards, setCards] = useState([])\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    async function initPage() {\r\n        setLoading(true)\r\n        const assets = await loadCollection();\r\n        console.log(assets)\r\n        setCards(assets)\r\n        setAllCards(assets)\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        initPage();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(cards)\r\n    }, [cards])\r\n\r\n    const handleInput = (e) => {\r\n        const filteredResult = allCards.filter((card) => card.name.toLowerCase().includes(e.target.value.toLowerCase()))\r\n        setCards(filteredResult)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container d-flex justify-content-center\">\r\n                <input type=\"text\" placeholder=\"Search a card\" onChange={handleInput} />\r\n            </div>\r\n            {isLoading ? <div className=\"container d-flex justify-content-center\">\r\n                <Spinner animation=\"grow\" /> </div> :\r\n                <ul className=\"list-unstyled\">\r\n                    <div className=\"row\">\r\n                        {cards.map((card) => (\r\n\r\n                            <Item key={card.id} card={card} showPopup={showPopup} setPopup={setPopup} popupCard={popupCard} setPopupCard={setPopupCard} />)\r\n                        )}\r\n                    </div>\r\n                </ul>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Collection","//ImmutableXConnection.js\r\n//Sample Immutable X functions for collection interaction\r\n\r\nimport { Link } from '@imtbl/imx-link-sdk';\r\nimport { ImmutableXClient } from '@imtbl/imx-link-lib';\r\nimport { ERC721TokenType, ETHTokenType } from '@imtbl/imx-link-types';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst linkAddress = 'https://link.x.immutable.com';\r\nconst apiAddress = 'https://api.x.immutable.com/v1';\r\n// Ropsten Testnet\r\n//const linkAddress = 'https://link.uat.x.immutable.com';\r\n//const apiAddress = 'https://api.uat.x.immutable.com/v1';\r\n\r\n//The token address for the collection to be monitored. Currently set to Gods Unchained\r\nconst COLLECTION_ADDRESS = '0xacb3c6a43d15b907e8433077b6d38ae40936fe2c';\r\n\r\nconst link = new Link(linkAddress);\r\n\r\n\r\nconst WALLET_ADDRESS = 'WALLET_ADDRESS';\r\nconst STARK_PUBLIC_KEY = 'STARK_PUBLIC_KEY';\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//////////////////////// User Account Management /////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\n//Creates or logs a user into their Immutable X account via web3 wallet\r\nexport async function setupAndLogin() {\r\n    const { address, starkPublicKey } = await link.setup({});\r\n    localStorage.setItem(WALLET_ADDRESS, address);\r\n    localStorage.setItem(STARK_PUBLIC_KEY, starkPublicKey);\r\n}\r\n\r\n//Remove the local storage wallet address\r\nexport function logout() {\r\n    localStorage.removeItem('WALLET_ADDRESS');\r\n}\r\n\r\n//Get the user balances\r\nexport async function getUserBalances() {\r\n    const client = await ImmutableXClient.build({ publicApiUrl: apiAddress });\r\n    const address = localStorage.getItem('WALLET_ADDRESS');\r\n    return await client.getBalances({ user: address });\r\n}\r\n\r\n//Deposits ETH into Immutable X\r\nexport async function depositEth(amountInEth) {\r\n    await link.deposit({\r\n        type: ETHTokenType.ETH,\r\n        amount: amountInEth\r\n    });\r\n}\r\n\r\n//Starts the withdrawal process from Immutable X\r\nexport async function prepareWithdrawal(amountInEth) {\r\n    await link.prepareWithdrawal({\r\n        type: ETHTokenType.ETH,\r\n        amount: amountInEth\r\n    });\r\n}\r\n\r\n//Finishes the withdrawal process from Immutable X\r\n//Must wait for user balance to have ETH in the withdrawable state \r\nexport async function completeWithdrawal() {\r\n    await link.prepareWithdrawal({\r\n        type: ETHTokenType.ETH\r\n    });\r\n}\r\n\r\n//Show user history\r\nexport async function showUserHistory() {\r\n    link.history({});\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n/////////////////////////////// Asset Management /////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Get the user's assets\r\n * @param {string} assetCursor - optional cursor parameter \r\n * @returns Object containing the assets and a cursor if more assets remain to be retrieved\r\n */\r\nexport async function getUserAssets(assetCursor) {\r\n    const client = await ImmutableXClient.build({ publicApiUrl: apiAddress });\r\n    const address = localStorage.getItem('WALLET_ADDRESS');\r\n    const assetsRequest = await client.getAssets({ user: address, cursor: assetCursor, status: 'imx', collection: COLLECTION_ADDRESS });\r\n    return { assets: assetsRequest.result, cursor: assetsRequest.cursor };\r\n}\r\n\r\n\r\nexport async function getAllUserAssets() {\r\n    let assetCursor;\r\n    let assets = [];\r\n    const client = await ImmutableXClient.build({ publicApiUrl: apiAddress });\r\n    const address = localStorage.getItem('WALLET_ADDRESS');\r\n    try {\r\n        do {\r\n            let assetRequest = await client.getAssets({ user: address, status: 'imx', collection: COLLECTION_ADDRESS, sell_orders: true });\r\n            assets = assets.concat(assetRequest.result);\r\n            assetCursor = assetRequest.cursor;\r\n\r\n        } while (assetCursor);\r\n\r\n        for (let asset of assets) {\r\n            asset.isListed = false;\r\n            if (asset.orders?.sell_orders?.length > 0) {\r\n                asset.isListed = true;\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n    finally {\r\n        return assets;\r\n    }\r\n\r\n}\r\n\r\n//Opens the Link SDK popup to sell an asset as the specified price\r\nexport async function sellAsset(asset, priceInEth) {\r\n    let sellParams = { amount: priceInEth, tokenId: asset.id, tokenAddress: asset.token_address };\r\n    //Throws an error if not successful\r\n    await link.sell(sellParams);\r\n}\r\n\r\n//Transfers an asset to another address\r\nexport async function transferERC721(asset, addressToSendTo) {\r\n    await link.transfer({\r\n        type: ERC721TokenType.ERC721,\r\n        tokenId: asset.id,\r\n        tokenAddress: asset.token_address,\r\n        to: addressToSendTo\r\n    });\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n///////////////////////// Marketplace Management /////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Get the cheapest active orders for the collection\r\n * @param {*} ordersCursor - optional cursor parameter \r\n * @param {*} tokenName - optional token name to filter on \r\n * @param {*} metadata - optional JSON string metadata to filter on \r\n * @returns Object containing the cheapest orders and a cursor if more orders remain\r\n */\r\nexport async function getCheapestSellOrders(pageSize, ordersCursor, metadata) {\r\n    try {\r\n        const client = await ImmutableXClient.build({ publicApiUrl: apiAddress });\r\n        const ordersRequest = await client.getOrders({\r\n            page_size: pageSize,\r\n            cursor: ordersCursor,\r\n            status: 'active',\r\n            sell_token_address: COLLECTION_ADDRESS,\r\n            sell_metadata: metadata,\r\n            order_by: 'buy_quantity',\r\n            direction: 'asc'\r\n        });\r\n        return { orders: ordersRequest.result, cursor: ordersRequest.cursor };\r\n    } catch (err) {\r\n        console.log(err)\r\n\r\n    }\r\n}\r\n\r\nexport async function getOrdersHistory(metadata) {\r\n    let ordersCursors;\r\n    let orders = [];\r\n    const client = await ImmutableXClient.build({ publicApiUrl: apiAddress });\r\n    const address = localStorage.getItem('WALLET_ADDRESS');\r\n    const min_date = new Date()\r\n    min_date.setMonth(min_date.getMonth() - 1);\r\n    try {\r\n        do {\r\n            let ordersRequest = await client.getOrders({\r\n                page_size: 200,\r\n                cursor: ordersCursors,\r\n                status: 'filled',\r\n                sell_token_address: COLLECTION_ADDRESS,\r\n                sell_metadata: metadata,\r\n                order_by: 'timestamp',\r\n                direction: 'asc',\r\n                min_timestamp: min_date.toISOString()\r\n\r\n            });\r\n            orders = orders.concat(ordersRequest.result);\r\n            ordersCursors = ordersRequest.cursor;\r\n\r\n\r\n        } while (ordersCursors);\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n    finally {\r\n        return orders;\r\n    }\r\n\r\n}\r\n\r\nexport async function getPriceHistory(metadata) {\r\n    let h_prices = [];\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    let map = new Map();\r\n    let volume;\r\n    let price;\r\n    try {\r\n        const orders = await getOrdersHistory(metadata);\r\n        console.log(orders)\r\n        orders.forEach((order) => {\r\n\r\n            let unixtime = Date.parse(order.updated_timestamp)\r\n            let time = new Date(unixtime)\r\n            let f_time = time.toLocaleDateString('en-US', { day: 'numeric', month: 'long' })\r\n            if (map.has(f_time)) {\r\n                const res = map.get(f_time);\r\n                price = (+res.price + +toEthPrice(order.buy.data.quantity))\r\n                price /= 2\r\n                volume = res.volume\r\n            }\r\n            else {\r\n                volume = 0;\r\n                price = (+toEthPrice(order.buy.data.quantity))\r\n\r\n            }\r\n            price.toFixed(6)\r\n\r\n            map.set(f_time, { price: price, volume: (volume + 1) });\r\n        });\r\n        console.log(map)\r\n        map.forEach((value, key) => {\r\n            let dict = {\r\n                time: key,\r\n                data: value\r\n            }\r\n            h_prices = h_prices.concat(dict)\r\n        })\r\n        return h_prices;\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n\r\n}\r\n//Opens the Link SDK popup to complete an order\r\nexport async function fillOrder(order) {\r\n    await link.buy({ orderId: order });\r\n}\r\n\r\nexport const toEthPrice = (price) => {\r\n    return (price * Math.pow(10, -18)).toFixed(6);\r\n\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////","import Axios from \"axios\"\r\n\r\nexport const fetchProtoCollection = async () => {\r\n    let url = 'https://api.godsunchained.com/v0/proto?perPage=2000'\r\n    const response = await Axios(url)\r\n    const assets = response.data.records\r\n    return assets;\r\n\r\n}\r\n\r\nexport const fetchDiscounts = async () => {\r\n    let url = 'https://gumarkets.freeboxos.fr:5000/discounts'\r\n    const response = await Axios(url)\r\n    const result = response.data\r\n    return result;\r\n\r\n}\r\n\r\nexport const getEthPrice = async () => {\r\n    let url = 'https://min-api.cryptocompare.com/data/price'\r\n    try {\r\n        const response = await Axios.get(url,\r\n            {\r\n                params:\r\n                {\r\n                    \"fsym\": \"ETH\",\r\n                    \"tsyms\": \"USD\",\r\n                }\r\n            });\r\n        const result = response.data;\r\n        return result.USD;\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\nexport const fetchBestPrice = async (popupCard, quality) => {\r\n    var result = null\r\n    var bestOrder = {\r\n        minPrice: Number.MAX_SAFE_INTEGER,\r\n        orderID: null\r\n    };\r\n    let url = 'https://api.x.immutable.com/v1/orders'\r\n    const json = JSON.stringify(\r\n        {\r\n            \"proto\": [`${popupCard.id}`],\r\n            \"quality\": [`${quality}`]\r\n        }\r\n    );\r\n    try {\r\n        const response = await Axios.get(url,\r\n            {\r\n                params:\r\n                {\r\n                    sell_metadata: json,\r\n                    status: 'active',\r\n                    order_by: 'buy_quantity',\r\n                    direction: 'asc',\r\n\r\n                }\r\n            })\r\n        result = response.data.result\r\n        result.map((order) => {\r\n\r\n            let quantity = order.buy.data.quantity\r\n            let decimals = order.buy.data.decimals\r\n            let currentPrice = (quantity * Math.pow(10, -decimals)).toFixed(6)\r\n            let currentID = order.order_id\r\n            if (bestOrder.minPrice > currentPrice) {\r\n                bestOrder.minPrice = currentPrice;\r\n                bestOrder.orderID = currentID;\r\n            }\r\n        })\r\n\r\n        var image_url = result[0].sell.data.properties.image_url;\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n    finally {\r\n        return {\r\n            result,\r\n            bestOrder,\r\n            image_url\r\n        };\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const toEthPrice = (price) => {\r\n    return (price * Math.pow(10, -18)).toFixed(6);\r\n\r\n}\r\n\r\n","import {\r\n    ComposedChart,\r\n    Line,\r\n    Area,\r\n    Bar,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend,\r\n    Scatter,\r\n    ResponsiveContainer,\r\n    Label,\r\n} from 'recharts';\r\nimport { getEthPrice } from '../utils/getProtoCollection.js';\r\nimport { getPriceHistory } from '../utils/ImmutableXConnection.js'\r\nimport { useState, useEffect } from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { SpinnerWrapper } from '../styles/GlobalStyle'\r\n\r\nfunction Chart({ proto, quality }) {\r\n    const [history, setHistory] = useState([])\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    const Init = async (proto, quality) => {\r\n        setLoading(true)\r\n        //get price history\r\n        const json = JSON.stringify(\r\n            {\r\n                \"proto\": [`${proto}`],\r\n                \"quality\": [`${quality}`]\r\n            }\r\n        );\r\n        const ethprice = await getEthPrice()\r\n\r\n        const hprices = await getPriceHistory(json)\r\n        hprices.forEach((elem) => (\r\n            elem.data.price = +(elem.data.price * ethprice).toFixed(2)\r\n        ))\r\n        console.log(hprices)\r\n        setHistory(hprices)\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        Init(proto, quality)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {isLoading ?\r\n                <SpinnerWrapper>\r\n                    <Spinner animation=\"grow\" /> </SpinnerWrapper>\r\n                :\r\n                <div className=\"d-flex align-items-center\">\r\n                    <ComposedChart\r\n                        width={500}\r\n                        height={400}\r\n                        data={history}\r\n                        margin={{\r\n                            top: 20,\r\n                            right: 20,\r\n                            bottom: 20,\r\n                            left: 20,\r\n                        }}\r\n                    >\r\n                        <CartesianGrid stroke=\"#f5f5f5\" />\r\n                        <XAxis dataKey=\"time\" />\r\n                        <YAxis yAxisId=\"left\" dataKey=\"data.price\">\r\n                            <Label angle={270} position='left' style={{ textAnchor: 'middle' }}>\r\n                                USD price\r\n                            </Label>\r\n                        </YAxis>\r\n                        <YAxis yAxisId=\"right\" dataKey=\"data.volume\" orientation=\"right\" domain={[0, dataMax => (dataMax * 5)]}>\r\n                            <Label angle={90} position='right' style={{ textAnchor: 'middle' }}>\r\n                                Volume\r\n                            </Label>\r\n                        </YAxis>\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"data.price\" stroke=\"#8884d8\" />\r\n                        <Bar yAxisId=\"right\" dataKey=\"data.volume\" barSize={5} fill=\"#413ea0\" />\r\n\r\n                    </ComposedChart>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Chart","import '../styles/Popup.css'\r\nimport Axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\nimport { Modal, Button, Spinner } from 'react-bootstrap';\r\nimport { sellAsset, fillOrder, getOrdersHistory, getCheapestSellOrders, getPriceHistory, toEthPrice } from '../utils/ImmutableXConnection.js'\r\nimport { fetchBestPrice, getEthPrice } from '../utils/getProtoCollection'\r\nimport { BuyButton, SellButton } from '../styles/GlobalStyle'\r\nimport Chart from './Chart'\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nfunction Popup({ showPopup, setPopup, popupCard }) {\r\n\r\n    const [price, setPrice] = useState(null);\r\n    const [orderID, setOrderID] = useState(null);\r\n    const [image, setImage] = useState(null);\r\n    const [quality, setQuality] = useState(\"Meteorite\")\r\n    const [error, setError] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [ethPrice, setEthPrice] = useState(null);\r\n    const [orders, setOrders] = useState([])\r\n\r\n\r\n    const Pcontainer = styled.div`\r\n  display:flex;\r\n  flex-direction:row;\r\n  justify-content : center;\r\n  align-items:center;\r\n  @media (max-width: 900px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\n\r\n\r\n\r\n    async function init() {\r\n        setLoading(true)\r\n        try {\r\n            setError(false)\r\n            //get best price for this card\r\n            const { result, bestOrder, image_url } = await fetchBestPrice(popupCard, quality);\r\n            console.log(result, bestOrder, image_url)\r\n            setOrders(result.slice(0, 5))\r\n            setPrice(bestOrder.minPrice)\r\n            setOrderID(bestOrder.orderID)\r\n            const aPrice = await getEthPrice();\r\n            setEthPrice(aPrice);\r\n            setImage(image_url)\r\n            if (bestOrder.orderID === null) {\r\n                setError(true)\r\n            }\r\n\r\n        } catch (err) {\r\n            setError(true);\r\n            console.log(err)\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        init(popupCard, quality);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        init(popupCard, quality);\r\n    }, [quality])\r\n\r\n    const handleClose = () => {\r\n        setPopup(!showPopup)\r\n\r\n    }\r\n\r\n    const handleMeteorite = () => {\r\n        setQuality(\"Meteorite\")\r\n\r\n    }\r\n    const handleShadow = () => {\r\n        setQuality(\"Shadow\")\r\n\r\n    }\r\n    const handleGold = () => {\r\n        setQuality(\"Gold\")\r\n\r\n    }\r\n\r\n    const handleDiamond = () => {\r\n        setQuality(\"Diamond\")\r\n    }\r\n\r\n    const handleSell = () => {\r\n        sellAsset('0x843279e9ee4e64ff7a4d8743df80e5a914ff8053ee40a15b6d7b6a5b195e8375', '0xacb3c6a43d15b907e8433077b6d38ae40936fe2c', 0.01)\r\n    }\r\n\r\n\r\n    async function handleBuy(e) {\r\n        try {\r\n            await fillOrder(e.target.value);\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal show={showPopup} onHide={handleClose} dialogClassName=\"modal-80w\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{popupCard.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {isLoading ?\r\n                        <div className=\"container d-flex justify-content-center\">\r\n                            <Spinner animation=\"grow\" /> </div>\r\n                        :\r\n                        error ? <h5>this card is not available for trade</h5> :\r\n                            <div>\r\n                                <p>Quality : {quality}</p>\r\n                                <p>Price : {price} ETH - {(price * ethPrice).toFixed(2)} USD</p>\r\n                                <Pcontainer>\r\n                                    <img src={image} alt={popupCard.id}></img>\r\n                                    <Chart proto={popupCard.id} quality={quality} />\r\n                                </Pcontainer>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <p>For sale:\r\n                                        {orders.map((order) => {\r\n                                            const order_ethprice = toEthPrice(order.buy.data.quantity)\r\n                                            const order_usdprice = (order_ethprice * ethPrice).toFixed(2)\r\n                                            return (\r\n                                                <p><BuyButton value={order.order_id} onClick={handleBuy}>{order_usdprice} USD </BuyButton> : {order_ethprice} ETH</p>\r\n                                            )\r\n                                        }\r\n                                        )}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                    }\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleMeteorite}>\r\n                        Meteorite\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleShadow}>\r\n                        Shadow\r\n                    </Button>\r\n                    <Button variant=\"warning\" onClick={handleGold}>\r\n                        Gold\r\n                    </Button>\r\n                    <Button variant=\"link\" onClick={handleDiamond}>\r\n                        Diamond\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Popup","import { useState, useEffect } from 'react'\r\nimport Collection from \"../components/Collection\"\r\nimport Popup from '../components/Popup'\r\nimport { fetchProtoCollection } from '../utils/getProtoCollection'\r\n\r\nfunction Home() {\r\n\r\n    const [showPopup, setPopup] = useState(false);\r\n    const [popupCard, setPopupCard] = useState(null)\r\n\r\n    console.log(popupCard)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Collection showPopup={showPopup} setPopup={setPopup} popupCard={popupCard} setPopupCard={setPopupCard} loadCollection={fetchProtoCollection} />\r\n            {showPopup ?\r\n                <Popup showPopup={showPopup} setPopup={setPopup} popupCard={popupCard} />\r\n                : null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import { useState, createContext } from 'react'\r\n\r\nexport const LoggedContext = createContext()\r\n\r\nexport const LoggedProvider = ({ children }) => {\r\n    const [logged, setLogged] = useState(localStorage.getItem('WALLET_ADDRESS') !== null)\r\n\r\n    return (\r\n        <LoggedContext.Provider value={{ logged, setLogged }}>\r\n            {children}\r\n        </LoggedContext.Provider>\r\n    )\r\n}","\r\nimport { ImageWrapper } from '../styles/GlobalStyle'\r\n\r\n\r\nfunction OwnedCard({ card, showPopup, setPopup, popupCard, setPopupCard }) {\r\n\r\n\r\n\r\n    const handleClick = () => {\r\n        setPopup(!showPopup)\r\n        setPopupCard(card)\r\n    }\r\n\r\n    return (\r\n        <div className=\"lol\">\r\n            <li key={card.id}>\r\n                <ImageWrapper>\r\n                    <img className='nft-item-cover' src={card.image_url} alt={`${card.id} cover`} onClick={handleClick} />\r\n                </ImageWrapper>\r\n            </li>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OwnedCard","import { useState, useEffect } from 'react'\r\nimport OwnedCard from './OwnedCard'\r\nimport styled from 'styled-components'\r\nimport '../styles/Collection.css'\r\nimport { getAllUserAssets } from '../utils/ImmutableXConnection'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction OwnedCollection({ showPopup, setPopup, popupCard, setPopupCard }) {\r\n\r\n\r\n\r\n    const CardWrapper = styled.div`\r\n    \r\n  `\r\n\r\n    const [allCards, setAllCards] = useState([])\r\n    const [cards, setCards] = useState([])\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n\r\n\r\n\r\n    async function initPage() {\r\n        setLoading(true)\r\n        try {\r\n            const assets = await getAllUserAssets();\r\n            setCards(assets)\r\n            setAllCards(assets)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        initPage();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(cards)\r\n    }, [cards])\r\n\r\n    const handleInput = (e) => {\r\n        const filteredResult = allCards.filter((card) => card.name.toLowerCase().includes(e.target.value.toLowerCase()))\r\n        setCards(filteredResult)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container d-flex justify-content-center\">\r\n                <input type=\"text\" onChange={handleInput} placeholder=\"Search a card\" />\r\n            </div>\r\n            {isLoading ? <div className=\"container d-flex justify-content-center\">\r\n                <Spinner animation=\"grow\" /> </div> :\r\n                <ul className=\"list-unstyled\">\r\n                    <div className=\"row\">\r\n                        {cards.map((card) => (\r\n                            <CardWrapper>\r\n                                <OwnedCard key={card.id} card={card} showPopup={showPopup} setPopup={setPopup} popupCard={popupCard} setPopupCard={setPopupCard} />\r\n                            </CardWrapper>\r\n                        )\r\n                        )}\r\n                    </div>\r\n                </ul>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default OwnedCollection","import '../styles/Popup.css'\r\nimport Axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\nimport { Modal, Button, Spinner } from 'react-bootstrap';\r\nimport { toEthPrice } from '../utils/getProtoCollection'\r\nimport { sellAsset, fillOrder, getCheapestSellOrders } from '../utils/ImmutableXConnection.js'\r\nimport { BuyButton, SellButton } from '../styles/GlobalStyle'\r\nimport Chart from './Chart'\r\nimport styled from 'styled-components';\r\n\r\n\r\nfunction OwnedPopup({ showPopup, setPopup, popupCard }) {\r\n\r\n    const [sellPrice, setSellPrice] = useState(null)\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [orders, setOrders] = useState([])\r\n\r\n    const Pcontainer = styled.div`\r\n    display:flex;\r\n    flex-direction:row;\r\n    justify-content : center;\r\n    align-items:center;\r\n    @media (max-width: 900px) {\r\n      flex-direction: column;\r\n    }\r\n  `\r\n\r\n    async function fetchCheapestSellOrders() {\r\n        setLoading(true)\r\n        try {\r\n            const json = JSON.stringify(\r\n                {\r\n                    \"proto\": [`${popupCard.metadata.proto}`],\r\n                    \"quality\": [`${popupCard.metadata.quality}`]\r\n                }\r\n            );\r\n            const myOrders = await getCheapestSellOrders(5, '', json)\r\n            setOrders(myOrders.orders)\r\n            console.log(myOrders)\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCheapestSellOrders();\r\n    }, [])\r\n\r\n    const handleClose = () => {\r\n        setPopup(!showPopup)\r\n\r\n    }\r\n\r\n    const handleSell = async () => {\r\n        console.log(\"SELL ORDER\", sellPrice)\r\n        console.log(\"asset ID\", popupCard.id);\r\n        console.log(\"tokenAddress\", popupCard.token_address)\r\n        try {\r\n            await sellAsset(popupCard, sellPrice);\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setSellPrice(e.target.value)\r\n    }\r\n\r\n    const handleBuy = (e) => {\r\n        console.log(e.target.value)\r\n        fillOrder(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={showPopup} onHide={handleClose} dialogClassName=\"modal-80w\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{popupCard.metadata.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {isLoading ?\r\n                        <div className=\"container d-flex justify-content-center\">\r\n                            <Spinner animation=\"grow\" /> </div>\r\n                        :\r\n                        <div>\r\n                            <p>Quality : {popupCard.metadata.quality}</p>\r\n                            <Pcontainer>\r\n                                <img src={popupCard.image_url} alt={popupCard.id}></img>\r\n                                <Chart proto={popupCard.metadata.proto} quality={popupCard.metadata.quality} />\r\n                            </Pcontainer>\r\n                            <p>For sale:\r\n                                {orders.map((order) => (\r\n                                    <p><BuyButton value={order.order_id} onClick={handleBuy}>BUY</BuyButton> : {toEthPrice(order.buy.data.quantity)} </p>\r\n                                )\r\n                                )}</p>\r\n                        </div>\r\n                    }\r\n                </Modal.Body >\r\n                <Modal.Footer>\r\n                    <div className=\"container d-flex content-center\">\r\n                        <input type=\"text\" name=\"ethprice\" placeHolder=\"eth Price\" onChange={handleChange} />\r\n                        <SellButton onClick={handleSell}>Sell yours</SellButton>\r\n                    </div>\r\n                </Modal.Footer>\r\n            </Modal >\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OwnedPopup","import { setupAndLogin } from '../utils/ImmutableXConnection'\r\nimport { LoggedContext } from '../utils/context'\r\nimport { useEffect, useState, useContext } from 'react'\r\n\r\nimport OwnedCollection from '../components/OwnedCollection'\r\nimport OwnedPopup from '../components/OwnedPopup'\r\n\r\nfunction Account() {\r\n\r\n    const { logged, setLogged } = useContext(LoggedContext);\r\n    const [address, setAddress] = useState('')\r\n    const [showPopup, setPopup] = useState(false);\r\n    const [popupCard, setPopupCard] = useState(null)\r\n\r\n\r\n\r\n    async function logAccount() {\r\n        if (!logged) {\r\n            try {\r\n                await setupAndLogin()\r\n                setLogged(true)\r\n            }\r\n            catch (err) {\r\n                console.log(err)\r\n                setLogged(false)\r\n            }\r\n        }\r\n        setAddress(localStorage.getItem('WALLET_ADDRESS'))\r\n    }\r\n\r\n    useEffect(() => {\r\n        logAccount();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <OwnedCollection showPopup={showPopup} setPopup={setPopup} popupCard={popupCard} setPopupCard={setPopupCard} user={address} />\r\n            {showPopup ?\r\n                <OwnedPopup showPopup={showPopup} setPopup={setPopup} popupCard={popupCard} />\r\n                : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account","export default __webpack_public_path__ + \"static/media/logo.aac3612d.png\";","import '../styles/Header.css'\r\nimport styled from 'styled-components'\r\nimport Logo from '../assets/logo.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { setupAndLogin, logout } from '../utils/ImmutableXConnection'\r\nimport { useContext } from 'react'\r\nimport { LoggedContext } from '../utils/context'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DefaultButton } from '../styles/GlobalStyle'\r\n\r\nfunction Header() {\r\n\r\n    const NavContainer = styled.nav`\r\n  padding: 30px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n    const StyledLink = styled(Link)`\r\n  padding: 10px 15px;\r\n  color: #8186a0;\r\n  text-decoration: none;\r\n  font-size: 18px;\r\n  text-align: center;\r\n`\r\n\r\n\r\n\r\n    const { logged, setLogged } = useContext(LoggedContext);\r\n    const history = useHistory();\r\n\r\n    async function handleConnect() {\r\n        if (logged) {\r\n            alert(\"user already connected\")\r\n        }\r\n        else {\r\n            async function logAccount() {\r\n                try {\r\n                    await setupAndLogin()\r\n                    setLogged(true)\r\n                }\r\n                catch (err) {\r\n                    console.log(err)\r\n                    setLogged(false)\r\n                }\r\n            }\r\n            logAccount();\r\n        }\r\n    }\r\n\r\n    const handleDisconnect = () => {\r\n        if (logged) {\r\n            logout();\r\n            setLogged(false)\r\n            let path = `/browse`;\r\n            history.push(path);\r\n            alert(\"user disconnecterd\")\r\n        }\r\n        else {\r\n            alert(\"user not logged in\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\" jumbotron d-flex headerWrapper\">\r\n            <div className=\"d-flex\">\r\n                <img src={Logo} className=\"mainLogo\" alt=\"mainLogo\" />\r\n            </div>\r\n            <div className=\"d-flex\">\r\n\r\n            </div>\r\n            <NavContainer>\r\n                {logged ? <DefaultButton onClick={handleDisconnect}>Disconnect</DefaultButton> : (<DefaultButton onClick={handleConnect}>Connect</DefaultButton>)}\r\n                <StyledLink className=\"link\" to=\"/browse\" >Browse Cards</StyledLink>\r\n                <StyledLink className=\"link\" to=\"/account\">Your Cards</StyledLink>\r\n                <StyledLink className=\"link\" to=\"/discounts\">Discounts</StyledLink>\r\n            </NavContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import { useState, useEffect } from 'react'\r\nimport Collection from \"../components/Collection\"\r\nimport Popup from '../components/Popup'\r\nimport { fetchDiscounts } from '../utils/getProtoCollection'\r\n\r\nfunction Discounts() {\r\n\r\n    const [showPopup, setPopup] = useState(false);\r\n    const [popupCard, setPopupCard] = useState(null)\r\n\r\n    console.log(popupCard)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Collection showPopup={showPopup} setPopup={setPopup} popupCard={popupCard} setPopupCard={setPopupCard} loadCollection={fetchDiscounts} />\r\n            {showPopup ?\r\n                <Popup showPopup={showPopup} setPopup={setPopup} popupCard={popupCard} />\r\n                : null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Discounts","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\r\nimport Home from './pages/Home'\r\nimport Account from './pages/Account'\r\nimport Header from './components/Header'\r\nimport Discounts from './pages/Discounts'\r\nimport { LoggedProvider } from './utils/context'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Router>\r\n\t\t\t<LoggedProvider>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t<Redirect to=\"/browse\" />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/browse\">\r\n\t\t\t\t\t<Home />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/account\">\r\n\t\t\t\t\t<Account />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/discounts\">\r\n\t\t\t\t\t<Discounts />\r\n\t\t\t\t</Route>\r\n\t\t\t</LoggedProvider>\r\n\t\t</Router>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n)\r\n"],"sourceRoot":""}