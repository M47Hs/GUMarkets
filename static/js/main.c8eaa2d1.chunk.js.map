{"version":3,"sources":["utils/ImmutableXConnection.js","utils/getProtoCollection.js","styles/GlobalStyle.js","components/Popup.js","components/Item.js","components/Collection.js","pages/Home.js","utils/context.js","components/OwnedCard.js","components/OwnedCollection.js","components/OwnedPopup.js","pages/Account.js","assets/logo.png","components/Header.js","index.js"],"names":["apiAddress","COLLECTION_ADDRESS","link","Link","WALLET_ADDRESS","STARK_PUBLIC_KEY","setupAndLogin","a","setup","address","starkPublicKey","localStorage","setItem","getAllUserAssets","assets","ImmutableXClient","build","publicApiUrl","client","getItem","getAssets","user","status","collection","sell_orders","assetRequest","concat","result","assetCursor","cursor","asset","isListed","orders","length","console","log","sellAsset","priceInEth","sellParams","amount","tokenId","id","tokenAddress","token_address","sell","getCheapestSellOrders","pageSize","ordersCursor","metadata","getOrders","page_size","sell_token_address","sell_metadata","order_by","direction","ordersRequest","fillOrder","order","buy","orderId","fetchProtoCollection","Axios","response","data","records","fetchBestPrice","popupCard","quality","bestOrder","minPrice","Number","MAX_SAFE_INTEGER","orderID","json","JSON","stringify","get","params","map","quantity","decimals","currentPrice","Math","pow","toFixed","currentID","order_id","image_url","properties","ImageWrapper","styled","div","BuyButton","button","SellButton","DefaultButton","Popup","showPopup","setPopup","useState","price","setPrice","setOrderID","image","setImage","setQuality","setError","isLoading","setLoading","getBestPrice","toString","useEffect","Modal","show","onHide","Header","closeButton","Title","name","Body","className","Spinner","animation","src","alt","onClick","Footer","Button","variant","Item","card","setPopupCard","Collection","allCards","setAllCards","cards","setCards","initPage","type","placeholder","onChange","e","filteredResult","filter","toLowerCase","includes","target","value","Home","LoggedContext","createContext","LoggedProvider","children","logged","setLogged","Provider","OwnedCard","OwnedCollection","CardWrapper","OwnedPopup","sellPrice","setSellPrice","setOrders","proto","myOrders","fetchCheapestSellOrders","handleSell","handleBuy","placeHolder","Account","useContext","setAddress","logAccount","NavContainer","nav","history","useHistory","alert","Logo","removeItem","push","to","ReactDOM","render","StrictMode","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.c8eaa2d1.chunk.js","sourcesContent":["//ImmutableXConnection.js\r\n//Sample Immutable X functions for collection interaction\r\n\r\nimport { Link } from '@imtbl/imx-link-sdk';\r\nimport { ImmutableXClient } from '@imtbl/imx-link-lib';\r\nimport { ERC721TokenType, ETHTokenType } from '@imtbl/imx-link-types';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst linkAddress = 'https://link.x.immutable.com';\r\nconst apiAddress = 'https://api.x.immutable.com/v1';\r\n// Ropsten Testnet\r\n//const linkAddress = 'https://link.uat.x.immutable.com';\r\n//const apiAddress = 'https://api.uat.x.immutable.com/v1';\r\n\r\n//The token address for the collection to be monitored. Currently set to Gods Unchained\r\nconst COLLECTION_ADDRESS = '0xacb3c6a43d15b907e8433077b6d38ae40936fe2c';\r\n\r\nconst link = new Link(linkAddress);\r\n\r\n\r\nconst WALLET_ADDRESS = 'WALLET_ADDRESS';\r\nconst STARK_PUBLIC_KEY = 'STARK_PUBLIC_KEY';\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//////////////////////// User Account Management /////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\n//Creates or logs a user into their Immutable X account via web3 wallet\r\nexport async function setupAndLogin() {\r\n    const { address, starkPublicKey } = await link.setup({});\r\n    localStorage.setItem(WALLET_ADDRESS, address);\r\n    localStorage.setItem(STARK_PUBLIC_KEY, starkPublicKey);\r\n}\r\n\r\n//Remove the local storage wallet address\r\nexport function logout() {\r\n    localStorage.removeItem('WALLET_ADDRESS');\r\n}\r\n\r\n//Get the user balances\r\nexport async function getUserBalances() {\r\n    const client = await ImmutableXClient.build({ publicApiUrl: apiAddress });\r\n    const address = localStorage.getItem('WALLET_ADDRESS');\r\n    return await client.getBalances({ user: address });\r\n}\r\n\r\n//Deposits ETH into Immutable X\r\nexport async function depositEth(amountInEth) {\r\n    await link.deposit({\r\n        type: ETHTokenType.ETH,\r\n        amount: amountInEth\r\n    });\r\n}\r\n\r\n//Starts the withdrawal process from Immutable X\r\nexport async function prepareWithdrawal(amountInEth) {\r\n    await link.prepareWithdrawal({\r\n        type: ETHTokenType.ETH,\r\n        amount: amountInEth\r\n    });\r\n}\r\n\r\n//Finishes the withdrawal process from Immutable X\r\n//Must wait for user balance to have ETH in the withdrawable state \r\nexport async function completeWithdrawal() {\r\n    await link.prepareWithdrawal({\r\n        type: ETHTokenType.ETH\r\n    });\r\n}\r\n\r\n//Show user history\r\nexport async function showUserHistory() {\r\n    link.history({});\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n/////////////////////////////// Asset Management /////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Get the user's assets\r\n * @param {string} assetCursor - optional cursor parameter \r\n * @returns Object containing the assets and a cursor if more assets remain to be retrieved\r\n */\r\nexport async function getUserAssets(assetCursor) {\r\n    const client = await ImmutableXClient.build({ publicApiUrl: apiAddress });\r\n    const address = localStorage.getItem('WALLET_ADDRESS');\r\n    const assetsRequest = await client.getAssets({ user: address, cursor: assetCursor, status: 'imx', collection: COLLECTION_ADDRESS });\r\n    return { assets: assetsRequest.result, cursor: assetsRequest.cursor };\r\n}\r\n\r\n\r\nexport async function getAllUserAssets() {\r\n    let assetCursor;\r\n    let assets = [];\r\n    const client = await ImmutableXClient.build({ publicApiUrl: apiAddress });\r\n    const address = localStorage.getItem('WALLET_ADDRESS');\r\n    try {\r\n        do {\r\n            let assetRequest = await client.getAssets({ user: address, status: 'imx', collection: COLLECTION_ADDRESS, sell_orders: true });\r\n            assets = assets.concat(assetRequest.result);\r\n            assetCursor = assetRequest.cursor;\r\n\r\n        } while (assetCursor);\r\n\r\n        for (let asset of assets) {\r\n            asset.isListed = false;\r\n            if (asset.orders?.sell_orders?.length > 0) {\r\n                asset.isListed = true;\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n    finally {\r\n        return assets;\r\n    }\r\n\r\n}\r\n\r\n//Opens the Link SDK popup to sell an asset as the specified price\r\nexport async function sellAsset(asset, priceInEth) {\r\n    let sellParams = { amount: priceInEth, tokenId: asset.id, tokenAddress: asset.token_address };\r\n    //Throws an error if not successful\r\n    await link.sell(sellParams);\r\n}\r\n\r\n//Transfers an asset to another address\r\nexport async function transferERC721(asset, addressToSendTo) {\r\n    await link.transfer({\r\n        type: ERC721TokenType.ERC721,\r\n        tokenId: asset.id,\r\n        tokenAddress: asset.token_address,\r\n        to: addressToSendTo\r\n    });\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n///////////////////////// Marketplace Management /////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Get the cheapest active orders for the collection\r\n * @param {*} ordersCursor - optional cursor parameter \r\n * @param {*} tokenName - optional token name to filter on \r\n * @param {*} metadata - optional JSON string metadata to filter on \r\n * @returns Object containing the cheapest orders and a cursor if more orders remain\r\n */\r\nexport async function getCheapestSellOrders(pageSize, ordersCursor, metadata) {\r\n    try {\r\n        const client = await ImmutableXClient.build({ publicApiUrl: apiAddress });\r\n        const ordersRequest = await client.getOrders({\r\n            page_size: pageSize,\r\n            cursor: ordersCursor,\r\n            status: 'active',\r\n            sell_token_address: COLLECTION_ADDRESS,\r\n            sell_metadata: metadata,\r\n            order_by: 'buy_quantity',\r\n            direction: 'asc'\r\n        });\r\n        return { orders: ordersRequest.result, cursor: ordersRequest.cursor };\r\n    } catch (err) {\r\n        console.log(err)\r\n\r\n    }\r\n}\r\n\r\n//Opens the Link SDK popup to complete an order\r\nexport async function fillOrder(order) {\r\n    await link.buy({ orderId: order });\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////////////////////////","import Axios from \"axios\"\r\n\r\nexport const fetchProtoCollection = async () => {\r\n    let url = 'https://api.godsunchained.com/v0/proto?perPage=2000'\r\n    const response = await Axios(url)\r\n    const assets = response.data.records\r\n    return assets;\r\n\r\n}\r\n\r\nexport const fetchBestPrice = async (popupCard, quality) => {\r\n    var bestOrder = {\r\n        minPrice: Number.MAX_SAFE_INTEGER,\r\n        orderID: null\r\n    };\r\n    let url = 'https://api.x.immutable.com/v1/orders'\r\n    const json = JSON.stringify(\r\n        {\r\n            \"proto\": [`${popupCard.id}`],\r\n            \"quality\": [`${quality}`]\r\n        }\r\n    );\r\n    try {\r\n        const response = await Axios.get(url,\r\n            {\r\n                params:\r\n                {\r\n                    sell_metadata: json,\r\n                    status: 'active',\r\n                    order_by: 'buy_quantity',\r\n                    direction: 'asc',\r\n\r\n                }\r\n            })\r\n        const result = response.data.result\r\n        console.log(result)\r\n        result.map((order) => {\r\n\r\n            let quantity = order.buy.data.quantity\r\n            let decimals = order.buy.data.decimals\r\n            let currentPrice = (quantity * Math.pow(10, -decimals)).toFixed(6)\r\n            let currentID = order.order_id\r\n            if (bestOrder.minPrice > currentPrice) {\r\n                bestOrder.minPrice = currentPrice;\r\n                bestOrder.orderID = currentID;\r\n            }\r\n        })\r\n\r\n        var image_url = result[0].sell.data.properties.image_url;\r\n        console.log(bestOrder)\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n    finally {\r\n        return {\r\n            bestOrder,\r\n            image_url\r\n        };\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const toEthPrice = (price) => {\r\n    return (price * Math.pow(10, -18)).toFixed(6);\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport styled from \"styled-components\"\r\n\r\nexport const ImageWrapper = styled.div`\r\ntransition: all .2s ease-in-out;\r\nborder-radius: 10px;\r\n&:hover{\r\n    transform:scale(1.1);\r\n}\r\n`\r\n\r\nexport const BuyButton = styled.button`\r\n  background-color: green;\r\n  width: 90px;\r\n  height: 30px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  color: white;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const SellButton = styled.button`\r\n  background-color: red;\r\n  width: 90px;\r\n  height: 30px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  color: white;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 12px;\r\n  margin-left:10px;\r\n`;\r\n\r\nexport const DefaultButton = styled.button`\r\nbackground-color: grey;\r\n  width: 90px;\r\n  height: 30px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  color: white;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 12px;\r\n  margin-left:10px;\r\n`","import '../styles/Popup.css'\r\nimport Axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\nimport { Modal, Button, Spinner } from 'react-bootstrap';\r\nimport { sellAsset, fillOrder } from '../utils/ImmutableXConnection.js'\r\nimport { fetchBestPrice } from '../utils/getProtoCollection'\r\nimport { BuyButton, SellButton } from '../styles/GlobalStyle'\r\n\r\n\r\nfunction Popup({ showPopup, setPopup, popupCard }) {\r\n\r\n    const [price, setPrice] = useState(null);\r\n    const [orderID, setOrderID] = useState(null);\r\n    const [image, setImage] = useState(null);\r\n    const [quality, setQuality] = useState(\"Meteorite\")\r\n    const [error, setError] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n\r\n    async function getBestPrice() {\r\n        setLoading(true)\r\n        try {\r\n            const { bestOrder, image_url } = await fetchBestPrice(popupCard, quality);\r\n            setPrice(bestOrder.minPrice)\r\n            setOrderID(bestOrder.orderID)\r\n            setImage(image_url)\r\n\r\n        } catch (err) {\r\n            setError(true);\r\n            console.log(err)\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getBestPrice(popupCard, quality);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getBestPrice(popupCard, quality);\r\n    }, [quality])\r\n\r\n    const handleClose = () => {\r\n        setPopup(!showPopup)\r\n\r\n    }\r\n\r\n    const handleMeteorite = () => {\r\n        setQuality(\"Meteorite\")\r\n\r\n    }\r\n    const handleShadow = () => {\r\n        setQuality(\"Shadow\")\r\n        console.log(\"Shadow\")\r\n\r\n    }\r\n    const handleGold = () => {\r\n        setQuality(\"Gold\")\r\n\r\n    }\r\n\r\n    const handleDiamond = () => {\r\n        setQuality(\"Diamond\")\r\n    }\r\n\r\n    const handleSell = () => {\r\n        sellAsset('0x843279e9ee4e64ff7a4d8743df80e5a914ff8053ee40a15b6d7b6a5b195e8375', '0xacb3c6a43d15b907e8433077b6d38ae40936fe2c', 0.01)\r\n    }\r\n\r\n    async function handleBuy() {\r\n        try {\r\n            console.log(orderID.toString());\r\n            await fillOrder(orderID.toString());\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal show={showPopup} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{popupCard.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {isLoading ?\r\n                        <div className=\"container d-flex justify-content-center\">\r\n                            <Spinner animation=\"grow\" /> </div>\r\n                        :\r\n                        <div>\r\n                            <p>Quality : {quality}</p>\r\n                            <p>Price : {price}</p>\r\n                            <div className=\"container d-flex justify-content-center\">\r\n                                <img src={image} alt={popupCard.id}></img>\r\n                            </div>\r\n                            <div className=\"container d-flex justify-content-center\">\r\n                                <BuyButton onClick={handleBuy}>Buy</BuyButton>\r\n                            </div>\r\n                        </div>}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleMeteorite}>\r\n                        Meteorite\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleShadow}>\r\n                        Shadow\r\n                    </Button>\r\n                    <Button variant=\"warning\" onClick={handleGold}>\r\n                        Gold\r\n                    </Button>\r\n                    <Button variant=\"link\" onClick={handleDiamond}>\r\n                        Diamond\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Popup","import { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport Popup from './Popup'\r\nimport { ImageWrapper } from '../styles/GlobalStyle'\r\n\r\n\r\nfunction Item({ card, showPopup, setPopup, popupCard, setPopupCard }) {\r\n\r\n\r\n    const handleClick = () => {\r\n        setPopup(!showPopup)\r\n        setPopupCard(card)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <li key={card.id}>\r\n                <ImageWrapper>\r\n                    <img className='nft-item-cover' src={`https://card.godsunchained.com/?id=${card.id}&q=4`} alt={`${card.id} cover`} onClick={handleClick} />\r\n                </ImageWrapper>\r\n            </li>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item","import { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport Item from './Item'\r\nimport '../styles/Collection.css'\r\nimport { fetchProtoCollection } from '../utils/getProtoCollection'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Collection({ showPopup, setPopup, popupCard, setPopupCard }) {\r\n    const [allCards, setAllCards] = useState([])\r\n    const [cards, setCards] = useState([])\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    async function initPage() {\r\n        setLoading(true)\r\n        const assets = await fetchProtoCollection();\r\n        console.log(assets)\r\n        setCards(assets)\r\n        setAllCards(assets)\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        initPage();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(cards)\r\n    }, [cards])\r\n\r\n    const handleInput = (e) => {\r\n        const filteredResult = allCards.filter((card) => card.name.toLowerCase().includes(e.target.value.toLowerCase()))\r\n        setCards(filteredResult)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container d-flex justify-content-center\">\r\n                <input type=\"text\" placeholder=\"Search a card\" onChange={handleInput} />\r\n            </div>\r\n            {isLoading ? <div className=\"container d-flex justify-content-center\">\r\n                <Spinner animation=\"grow\" /> </div> :\r\n                <ul className=\"list-unstyled\">\r\n                    <div className=\"row\">\r\n                        {cards.map((card) => (\r\n\r\n                            <Item key={card.id} card={card} showPopup={showPopup} setPopup={setPopup} popupCard={popupCard} setPopupCard={setPopupCard} />)\r\n                        )}\r\n                    </div>\r\n                </ul>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Collection","import { useState, useEffect } from 'react'\r\nimport Collection from \"../components/Collection\"\r\nimport Popup from '../components/Popup'\r\n\r\nfunction Home() {\r\n\r\n    const [showPopup, setPopup] = useState(false);\r\n    const [popupCard, setPopupCard] = useState(null)\r\n\r\n    console.log(popupCard)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Collection showPopup={showPopup} setPopup={setPopup} popupCard={popupCard} setPopupCard={setPopupCard} />\r\n            {showPopup ?\r\n                <Popup showPopup={showPopup} setPopup={setPopup} popupCard={popupCard} />\r\n                : null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import { useState, createContext } from 'react'\r\n\r\nexport const LoggedContext = createContext()\r\n\r\nexport const LoggedProvider = ({ children }) => {\r\n    const [logged, setLogged] = useState(localStorage.getItem('WALLET_ADDRESS') !== null)\r\n\r\n    return (\r\n        <LoggedContext.Provider value={{ logged, setLogged }}>\r\n            {children}\r\n        </LoggedContext.Provider>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport Popup from './Popup'\r\nimport styled from 'styled-components'\r\nimport { ImageWrapper } from '../styles/GlobalStyle'\r\n\r\n\r\nfunction OwnedCard({ card, showPopup, setPopup, popupCard, setPopupCard }) {\r\n\r\n\r\n\r\n    const handleClick = () => {\r\n        setPopup(!showPopup)\r\n        setPopupCard(card)\r\n    }\r\n\r\n    return (\r\n        <div className=\"lol\">\r\n            <li key={card.id}>\r\n                <ImageWrapper>\r\n                    <img className='nft-item-cover' src={card.image_url} alt={`${card.id} cover`} onClick={handleClick} />\r\n                </ImageWrapper>\r\n            </li>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OwnedCard","import { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport OwnedCard from './OwnedCard'\r\nimport styled from 'styled-components'\r\nimport '../styles/Collection.css'\r\nimport { fetchAssets } from '../utils/getProtoCollection'\r\nimport { getAllUserAssets } from '../utils/ImmutableXConnection'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction OwnedCollection({ showPopup, setPopup, popupCard, setPopupCard }) {\r\n\r\n\r\n\r\n    const CardWrapper = styled.div`\r\n    \r\n  `\r\n\r\n    const [allCards, setAllCards] = useState([])\r\n    const [cards, setCards] = useState([])\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n\r\n\r\n\r\n    async function initPage() {\r\n        setLoading(true)\r\n        try {\r\n            const assets = await getAllUserAssets();\r\n            setCards(assets)\r\n            setAllCards(assets)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        initPage();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(cards)\r\n    }, [cards])\r\n\r\n    const handleInput = (e) => {\r\n        const filteredResult = allCards.filter((card) => card.name.toLowerCase().includes(e.target.value.toLowerCase()))\r\n        setCards(filteredResult)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container d-flex justify-content-center\">\r\n                <input type=\"text\" onChange={handleInput} placeholder=\"Search a card\" />\r\n            </div>\r\n            {isLoading ? <div className=\"container d-flex justify-content-center\">\r\n                <Spinner animation=\"grow\" /> </div> :\r\n                <ul className=\"list-unstyled\">\r\n                    <div className=\"row\">\r\n                        {cards.map((card) => (\r\n                            <CardWrapper>\r\n                                <OwnedCard key={card.id} card={card} showPopup={showPopup} setPopup={setPopup} popupCard={popupCard} setPopupCard={setPopupCard} />\r\n                            </CardWrapper>\r\n                        )\r\n                        )}\r\n                    </div>\r\n                </ul>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default OwnedCollection","import '../styles/Popup.css'\r\nimport Axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\nimport { Modal, Button, Spinner } from 'react-bootstrap';\r\nimport { toEthPrice } from '../utils/getProtoCollection'\r\nimport { sellAsset, fillOrder, getCheapestSellOrders } from '../utils/ImmutableXConnection.js'\r\nimport { BuyButton, SellButton } from '../styles/GlobalStyle'\r\n\r\n\r\nfunction OwnedPopup({ showPopup, setPopup, popupCard }) {\r\n\r\n    const [sellPrice, setSellPrice] = useState(null)\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [orders, setOrders] = useState([])\r\n\r\n    async function fetchCheapestSellOrders() {\r\n        setLoading(true)\r\n        try {\r\n            const json = JSON.stringify(\r\n                {\r\n                    \"proto\": [`${popupCard.metadata.proto}`],\r\n                    \"quality\": [`${popupCard.metadata.quality}`]\r\n                }\r\n            );\r\n            const myOrders = await getCheapestSellOrders(5, '', json)\r\n            setOrders(myOrders.orders)\r\n            console.log(myOrders)\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n        finally {\r\n            setLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCheapestSellOrders();\r\n    }, [])\r\n\r\n    const handleClose = () => {\r\n        setPopup(!showPopup)\r\n\r\n    }\r\n\r\n    const handleSell = async () => {\r\n        console.log(\"SELL ORDER\", sellPrice)\r\n        console.log(\"asset ID\", popupCard.id);\r\n        console.log(\"tokenAddress\", popupCard.token_address)\r\n        try {\r\n            await sellAsset(popupCard, sellPrice);\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setSellPrice(e.target.value)\r\n    }\r\n\r\n    const handleBuy = (e) => {\r\n        console.log(e.target.value)\r\n        fillOrder(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={showPopup} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{popupCard.metadata.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {isLoading ?\r\n                        <div className=\"container d-flex justify-content-center\">\r\n                            <Spinner animation=\"grow\" /> </div>\r\n                        :\r\n                        <div>\r\n                            <p>Quality : {popupCard.metadata.quality}</p>\r\n                            <div className=\"container d-flex justify-content-center\">\r\n                                <img src={popupCard.image_url} alt={popupCard.id}></img>\r\n                            </div>\r\n                            <p>For sale:\r\n                                {orders.map((order) => (\r\n                                    <p><BuyButton value={order.order_id} onClick={handleBuy}>BUY</BuyButton> : {toEthPrice(order.buy.data.quantity)} </p>\r\n                                )\r\n                                )}</p>\r\n                        </div>}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <div className=\"container d-flex content-center\">\r\n                        <input type=\"text\" name=\"ethprice\" placeHolder=\"eth Price\" onChange={handleChange} />\r\n                        <SellButton onClick={handleSell}>Sell yours</SellButton>\r\n                    </div>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OwnedPopup","import { setupAndLogin, getUserAssets, getAllUserAssets, testUser } from '../utils/ImmutableXConnection'\r\nimport { LoggedContext } from '../utils/context'\r\nimport { useEffect, useState, useContext } from 'react'\r\nimport { createPortal } from 'react-dom'\r\nimport OwnedCollection from '../components/OwnedCollection'\r\nimport OwnedPopup from '../components/OwnedPopup'\r\n\r\nfunction Account() {\r\n\r\n    const { logged, setLogged } = useContext(LoggedContext);\r\n    const [address, setAddress] = useState('')\r\n    const [showPopup, setPopup] = useState(false);\r\n    const [popupCard, setPopupCard] = useState(null)\r\n\r\n\r\n\r\n    async function logAccount() {\r\n        if (!logged) {\r\n            try {\r\n                await setupAndLogin()\r\n                setLogged(true)\r\n            }\r\n            catch (err) {\r\n                console.log(err)\r\n                setLogged(false)\r\n            }\r\n        }\r\n        setAddress(localStorage.getItem('WALLET_ADDRESS'))\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        logAccount();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <OwnedCollection showPopup={showPopup} setPopup={setPopup} popupCard={popupCard} setPopupCard={setPopupCard} user={address} />\r\n            {showPopup ?\r\n                <OwnedPopup showPopup={showPopup} setPopup={setPopup} popupCard={popupCard} />\r\n                : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account","export default __webpack_public_path__ + \"static/media/logo.aac3612d.png\";","import '../styles/Header.css'\r\nimport styled from 'styled-components'\r\nimport Logo from '../assets/logo.png'\r\nimport Web3 from 'web3';\r\nimport { Link } from 'react-router-dom'\r\nimport { setupAndLogin, logout } from '../utils/ImmutableXConnection'\r\nimport { useState, useContext } from 'react'\r\nimport { LoggedContext } from '../utils/context'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DefaultButton } from '../styles/GlobalStyle'\r\n\r\nfunction Header() {\r\n\r\n    const NavContainer = styled.nav`\r\n  padding: 30px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n    const StyledLink = styled(Link)`\r\n  padding: 10px 15px;\r\n  color: #8186a0;\r\n  text-decoration: none;\r\n  font-size: 18px;\r\n  text-align: center;\r\n`\r\n\r\n\r\n\r\n    const { logged, setLogged } = useContext(LoggedContext);\r\n    const address = localStorage.getItem('WALLET_ADDRESS')\r\n    const history = useHistory();\r\n\r\n    async function handleConnect() {\r\n        if (logged) {\r\n            alert(\"user already connected\")\r\n        }\r\n        else {\r\n            async function logAccount() {\r\n                try {\r\n                    await setupAndLogin()\r\n                    setLogged(true)\r\n                }\r\n                catch (err) {\r\n                    console.log(err)\r\n                    setLogged(false)\r\n                }\r\n            }\r\n            logAccount();\r\n        }\r\n    }\r\n\r\n    const handleDisconnect = () => {\r\n        if (logged) {\r\n            logout();\r\n            setLogged(false)\r\n            let path = `/browse`;\r\n            history.push(path);\r\n            alert(\"user disconnecterd\")\r\n        }\r\n        else {\r\n            alert(\"user not logged in\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\" jumbotron d-flex headerWrapper\">\r\n            <div className=\"d-flex\">\r\n                <img src={Logo} className=\"mainLogo\" alt=\"mainLogo\" />\r\n            </div>\r\n            <div className=\"d-flex\">\r\n\r\n            </div>\r\n            <NavContainer>\r\n                {logged ? <DefaultButton onClick={handleDisconnect}>Disconnect</DefaultButton> : (<DefaultButton onClick={handleConnect}>Connect</DefaultButton>)}\r\n                <Link className=\"link\" to=\"/browse\" >Browse Cards</Link>\r\n                <Link className=\"link\" to=\"/account\">Your Cards</Link>\r\n            </NavContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\r\nimport Home from './pages/Home'\r\nimport Account from './pages/Account'\r\nimport Header from './components/Header'\r\nimport { LoggedProvider } from './utils/context'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Router>\r\n\t\t\t<LoggedProvider>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t<Redirect to=\"/browse\" />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/browse\">\r\n\t\t\t\t\t<Home />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/account\">\r\n\t\t\t\t\t<Account />\r\n\t\t\t\t</Route>\r\n\t\t\t</LoggedProvider>\r\n\t\t</Router>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n)\r\n"],"sourceRoot":""}